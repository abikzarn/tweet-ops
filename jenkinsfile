pipeline {
    agent {
        node {
            label 'maven'
        }
        
    }

environment {
        PATH = "/opt/apache-maven-3.9.9/bin:$PATH"
        DOCKERHUB_CREDENTIALS = credentials('docker-hub-credentials')

    }

    stages {
        stage('Build') {
            steps {
                echo '--------- Build Started ----------'
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo '--------- Build Finished ----------'
            }               
        }

        stage('Test') {
            steps {
                echo '--------- Unit Test Started ----------'
                sh 'mvn surefire-report:report'
                echo '--------- Unit Test Finished ----------'
            }
        }

        stage('SonarQube analysis') {
        environment {
            scannerHome = tool 'abikzarn-sonar-scanner'
        }
            steps {
                echo '--------- SonarQube Analysis Started----------'
                withSonarQubeEnv('abikzarn-sonarqube-server') { 
                sh 'mvn sonar:sonar -Dsonar.projectProperties=sonar-project.properties'
                }
                echo '--------- SonarQube Analysis Finished----------'
            }
        }
   }

        stage('Docker Build') {
            steps {
                echo '--------- Docker Build Started ----------'
                sh 'docker build -t abikzarn/tweet-ops:$BUILD_NUMBER .'
                echo '--------- Docker Build Finished ----------'
            }
        }

        stage('Docker Push') {
            steps {
                echo '--------- Docker Push Started ----------'
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh 'docker push abikzarn/tweet-ops:$BUILD_NUMBER'
                echo '--------- Docker Push Finished ----------'
            }
        }

        stage('kubernetes deploy') {
            steps {
                echo '--------- Kubernetes Deploy Started ----------'
                sh './kubernetes/deploy.sh'
                echo '--------- Kubernetes Deploy Finished ----------'
            }
        }
  }
}  